float:
  any:
  - base_args: ['@metric']
    constructor: openGaussHNSWPQ
    disabled: false
    docker_tag: ann-benchmarks-openGauss
    module: ann_benchmarks.algorithms.openGauss
    name: openGauss-hnswpq
    run_groups:
      M-16:
        arg_groups: [{M: 16, efConstruction: 200, hnswEarlystopThreshold: 2147483647, pqM: 96, concurrents: 80}]
        args: {}
        query_args: [[10, 20, 40, 80, 120, 200, 400, 800]]
      M-24:
        arg_groups: [{M: 24, efConstruction: 200, hnswEarlystopThreshold: 2147483647, pqM: 96, concurrents: 80}]
        args: {}
        query_args: [[10, 20, 40, 80, 120, 200, 400, 800]]
  - base_args: ['@metric']
    constructor: openGaussHNSW
    disabled: false
    docker_tag: ann-benchmarks-openGauss
    module: ann_benchmarks.algorithms.openGauss
    name: openGauss-hnsw
    run_groups:
      M-16:
        arg_groups: [{M: 16, efConstruction: 200, concurrents: 80}]
        args: {}
        query_args: [[10, 20, 40, 80, 120, 200, 400, 800]]
      M-24:
        arg_groups: [{M: 24, efConstruction: 200, concurrents: 80}]
        args: {}
        query_args: [[10, 20, 40, 80, 120, 200, 400, 800]]
  - base_args: ['@metric']
    constructor: openGaussIVF
    disabled: false
    docker_tag: ann-benchmarks-openGauss
    module: ann_benchmarks.algorithms.openGauss
    name: openGauss-ivfflat
    run_groups:
      pgvector:
        args: [[100, 200, 400, 1000, 2000, 4000]]
        query_args: [[1, 2, 4, 10, 20, 40, 100]]