float:
  angular:
    faiss-ivf:
      docker-tag: ann-benchmarks-faiss
      module: ann_benchmarks.algorithms.faiss
      constructor: FaissIVF
      base-args: ["@metric"]
      run-groups:
        base:
          args: [[32,64,128,256,512,1024,2048,4096,8192]]
          query-args: [[1, 5, 10, 50, 100, 200]]
    faiss-ivf-disk:
      docker-tag: ann-benchmarks-faiss
      module: ann_benchmarks.algorithms.faiss
      constructor: FaissIVFDisk
      base-args: ["@metric"]
      run-groups:
        base:
          args: [[32,64,128,256,512,1024,2048,4096,8192]]
          query-args: [[1, 5, 10, 50, 100, 200]]
    annoy:
      docker-tag: ann-benchmarks-annoy
      module: ann_benchmarks.algorithms.annoy
      constructor: Annoy
      base-args: ["@metric"]
      run-groups:
        annoy:
          args: [[100, 200, 400]]
          query-args: [[100, 200, 400, 1000, 2000, 4000, 10000, 20000, 40000,
                      100000, 200000, 400000]]
          # This run group produces 3 algorithm instances -- Annoy("angular",
          # 100), Annoy("angular", 200), and Annoy("angular", 400) -- each of
          # which will be used to run 12 different queries.
    annoy-disk:
      docker-tag: ann-benchmarks-annoy
      module: ann_benchmarks.algorithms.annoy
      constructor: AnnoyDisk
      base-args: ["@metric"]
      run-groups:
        annoy:
          args: [[100, 200, 400]]
          query-args: [[100, 200, 400, 1000, 2000, 4000, 10000, 20000, 40000,
                      100000, 200000, 400000]]
          # This run group produces 3 algorithm instances -- Annoy("angular",
          # 100), Annoy("angular", 200), and Annoy("angular", 400) -- each of
          # which will be used to run 12 different queries.
    NGT-panng:
      docker-tag: ann-benchmarks-ngt
      module: ann_benchmarks.algorithms.panng_ngt
      constructor : PANNG
      base-args : ["@metric", "Float"]
      run-groups :
        panng:
           args : [{'edge': 20, 'pathadj': 40, 'searchedge': 60}]
           query-args : [[0.6, 0.8, 0.9, 1.0, 1.02, 1.05, 1.1, 1.2]]
    NGT-panng-disk:
      docker-tag: ann-benchmarks-ngt_disk
      module: ann_benchmarks.algorithms.panng_ngt
      constructor : PANNG
      base-args : ["@metric", "Float"]
      run-groups :
        panng:
           args : [{'edge': 20, 'pathadj': 40, 'searchedge': 60}]
           query-args : [[0.6, 0.8, 0.9, 1.0, 1.02, 1.05, 1.1, 1.2]]
    NGT-onng:
      docker-tag: ann-benchmarks-ngt
      module: ann_benchmarks.algorithms.onng_ngt
      constructor : ONNG
      base-args : ["@metric", "Float", 0.1]
      run-groups :
        onng:
           args : [{'edge': 100, 'outdegree': 10, 'indegree': 120}]
           query-args : [[0.6, 0.9, 1.0, 1.02, 1.03, 1.05, 1.07, 1.1, 1.2]]
    NGT-onng-disk:
      docker-tag: ann-benchmarks-ngt_disk
      module: ann_benchmarks.algorithms.onng_ngt
      constructor : ONNG
      base-args : ["@metric", "Float", 0.1]
      run-groups :
        onng:
           args : [{'edge': 100, 'outdegree': 10, 'indegree': 120}]
           query-args : [[0.6, 0.9, 1.0, 1.02, 1.03, 1.05, 1.07, 1.1, 1.2]]
    pgann:
      docker-tag: ann-benchmarks-pgann
      module: ann_benchmarks.algorithms.pgann
      constructor: PgANN
      base-args: ["@metric"]
      run-groups:
        pgann:
          args: [["None"]]
          query-args: [[1, 3, 5, 10]]